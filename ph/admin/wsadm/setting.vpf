<H1>設定</H1>

<Hr/>
<H2 onclick="ph.jQuery('#realHostDiv').toggle();">+RealHost設定</H2>
<div class="settingItem" id="realHostDiv">
<p>サービスするサーバ情報を設定します</p>
selfDomain:<input type="text" id="selfDomain" size="64" value="$!esc.html($!{config.selfDomain})"/><input type="button" value="設定" onClick="ph.admin.doCommand('setSelfDomain',{domain:ph.jQuery('#selfDomain').val()},function(){alert('変更を有効にするにはPhantomProxyの再起動が必要です.')});"><br>
<input type="button" value="real host作成" onClick="realHostDialog({name:'',realHostInitBind:false,bindHost:'*',bindPort:'',backlog:'100',binding:false});">
<table style="width:100%;border-collapse:collapse;border: solid 1pt #000;">
<thead>
<tr><th>name</th><th>状態</th><th>init</th><th>host</th><th>port</th><th>backlog</th><th>whiteIpPattern</th><th>blackIpPattern</th></tr>
</thead>
<tbody id="realHostData"></tbody>
</table>
</div>

<Hr/>
<H2 onclick="ph.jQuery('#timeoutDiv').toggle();">+Timeout設定</H2>
<div class="settingItem" id="timeoutDiv">
<p>通信タイムアウトを設定します</p>
acceptTimeout:<input type="text" id="acceptTimeout" size="8" value="$!esc.html($!{config.acceptTimeout})"/>ms<br>
connectTimeout:<input type="text" id="connectTimeout" size="8" value="$!esc.html($!{config.connectTimeout})"/>ms<br>
readTimeout:<input type="text" id="readTimeout" size="8" value="$!esc.html($!{config.readTimeout})"/>ms<br>
writeTimeout:<input type="text" id="writeTimeout" size="8" value="$!esc.html($!{config.writeTimeout})"/>ms<br>
<input type="button" value="設定" onclick="setTimeouts();" /><br/>
</div>

<Hr/>
<H2 onclick="ph.jQuery('#authDiv').toggle();">+認証設定</H2>
<div class="settingItem" id="authDiv">
<p>ph認証:mappingとuserのrolesで認可します</p>
認証方法<select id="authScheme" size="1">
<option value="None">None</option>
<option value="Basic">Basic</option>
<option value="Digest">Digest</option>
<option value="BasicForm">BasicForm</option>
<option value="DigestForm">DigestForm</option>
</select>現在:<span id="curSchme">$!esc.html($!{config.getString('authenticateScheme')})</span><br/>
sessionTimeout:<input type="text" id="authSessionTimeout" size="12" value="$!esc.html($!{config.getString('sessionTimeout')})"/>ms<br/>
##logoutUrl:<input type="text" id="authLogoutUrl" size="64" value="$!esc.html($!{config.getString('logoutUrl')})"/><br/>
<input type="button" value="設定"  onclick="setAuth();"/><br/>
</div>

<Hr/>
<H2 onclick="ph.jQuery('#accesslogDiv').toggle();">+AccessLogs操作</H2>
<div class="settingItem" id="accesslogDiv">
<p>ログ、トレースデータを移出、移入することで別環境で採取した資料を取り扱うことができます</p>
<form method="post" enctype="multipart/form-data" action="accessLog" target="uploadFrame">
<input type="hidden" name="command" value="import" />
<input type="hidden" name="token" value="$esc.html(${session.token})"/>
移入ファイル指定:<input type="file" name="importsFile" id="importsFile" />
<input type="submit" value="移入"/><br/>
</form>
全AccessLog削除:<input type="button" onclick="accessLogDeleteQuery('');" value="削除" /><br/>
全AccessLog移出:<input type="button" onclick="accessLogExportQuery('');" value="移出" /><br/>
</div>

<Hr/>
<H2 onclick="ph.jQuery('#replayDiv').toggle();">+Replay File登録</H2>
<div class="settingItem" id="replayDiv">
<p>Replay機能で返却するコンテンツを登録することができます</p>
<form method="post" enctype="multipart/form-data" action="replayUpload" target="uploadFrame">
<input type="hidden" name="token" value="$esc.html(${session.token})"/>
path:<input type="text" name="replaypath" id="replaypath" size="64"/>
file:<input type="file" name="replayFile" id="replayFile" />
<input type="submit" value="登録"/><br/>
</form>
全ReplayFile削除:<input type="button" onclick="ph.admin.doCommand('replayDelete');" value="削除" />
</div>

<Hr/>
<H2 onclick="ph.jQuery('#proxyDiv').toggle();">+Proxy設定</H2>
<div class="settingItem" id="proxyDiv">
<p>http/httpsのネットワーク環境を設定してください</p>
pacUrl:<input type="text" name="proxyPacUrl" id="proxyPacUrl" size="64" value="$!esc.html($!{config.getString('pacUrl')})"/><br>
proxyServer:<input type="text" name="proxyServer" id="proxyServer" size="32" value="$!esc.html($!{config.getString('proxyServer')})"/><br>
sslProxyServer:<input type="text" name="sslProxyServer" id="sslProxyServer" size="32" value="$!esc.html($!{config.getString('sslProxyServer')})"/><br>
exceptProxyDomains:<input type="text" name="exceptProxyDomains" id="exceptProxyDomains" size="64" value="$!esc.html($!{config.getString('exceptProxyDomains')})"/><br/>
<input type="button" value="設定" onclick="setProxy();" /><br/>
</div>

<Hr/>
<H2 onclick="ph.jQuery('#keepAliveDiv').toggle();">+KeepAlive設定</H2>
<div class="settingItem" id="keepAliveDiv">
<p>httpプロトコルに関する設定を行います</p>
isWebKeepAlive:<input type="checkBox" name="isWebKeepAlive" id="isWebKeepAlive"
#if(${config.getBoolean('isWebKeepAlive')})
checked="checked"
#end
/><br/>
isProxyKeepAlive:<input type="checkBox" name="isProxyKeepAlive" id="isProxyKeepAlive"
#if(${config.getBoolean('isProxyKeepAlive')})
checked="checked"
#end
/><br/>
maxKeepAliveRequests:<input type="text" name="maxKeepAliveRequests" id="maxKeepAliveRequests" size="4" value="$!esc.html($!{config.getString('maxKeepAliveRequests')})"/><br/>
keepAliveTimeout:<input type="text" name="keepAliveTimeout" id="keepAliveTimeout" size="8" value="$!esc.html($!{config.getString('keepAliveTimeout')})"/>ms<br/>
contentEncoding:<select id="contentEncoding" size="1">
<option value="non">non</option>
<option value="gzip"
#if($config.getString('contentEncoding') && "gzip"==$config.getString('contentEncoding'))
selected="selected"
#end
>gzip</option>
</select><br/>
allowChunked:<input type="checkBox" name="allowChunked" id="allowChunked"
#if(${config.getBoolean('allowChunked')})
checked="checked"
#end
/><br/>
<input type="button" value="設定"  onclick="setKeepAlive();"/><br/>
</div>

<Hr/>
<H2 onclick="ph.jQuery('#html5Div').toggle();">+HTML5設定</H2>
<div class="settingItem" id="html5Div">
<p>利用可能なブラウザでHTML5機能を使用するか否かを設定してください</p>
Web Storage sessionStorage:必須</br>
Cross-document messaging:必須</br>

WebSocket spec:hixie75:<input type="checkBox" name="isUseHixie75" id="isUseHixie75"
#if(${config.getString('websocketSpecs').indexOf('hixie75')}>=0)
checked="checked"
#end
/>
hixie76:<input type="checkBox" name="isUseHixie76" id="isUseHixie76"
#if(${config.getString('websocketSpecs').indexOf('hixie76')}>=0)
checked="checked"
#end
/>
hybi10:<input type="checkBox" name="isUseHybi10" id="isUseHybi10"
#if(${config.getString('websocketSpecs').indexOf('hybi10')}>=0)
checked="checked"
#end
/>
<br/>
WebSocketMessageLimit:<input type="text" name="webSocketMessageLimit" id="webSocketMessageLimit"
value="${config.getInt('webSocketMessageLimit',2048000)}"
>byte<br/>
WebSocketPingInterval:<input type="text" name="webSocketPingInterval" id="webSocketPingInterval"
value="${config.getInt('webSocketPingInterval',0)}"
>ms<br/>

##Web Storage sessionStorage:<input type="checkBox" name="isUseSessionStorage" id="isUseSessionStorage"
###if(${config.getBoolean('useSessionStorage',true)})
##checked="checked"
###end
##/><br>
##Cross-document messaging:<input type="checkBox" name="isUseCrossDomain" id="isUseCrossDomain"
###if(${config.getBoolean('useCrossDomain',true)})
##checked="checked"
###end
##/><br>
<input type="button" value="設定" onclick="setHtml5();" /><br/>
</div>

<Hr/>
#set ($spdy2=false)
#set ($spdy3=false)
#set ($spdyConfig=$config.getSpsyConfig())
#set ($protocol=${spdyConfig.getSpdyProtocols()})
#if($protocol.indexOf('spdy/2')>=0)
 #set ($spdy2=true)
#end
#if($protocol.indexOf('spdy/3')>=0)
 #set ($spdy3=true)
#end
#set ($spdyFrameLimit=$spdyConfig.getSpdyFrameLimit())
#set ($spdyTimeout=$spdyConfig.getSpdyTimeout())
<H2 onclick="ph.jQuery('#spdySetting').toggle();">+Spdy設定</H2>
<div class="settingItem" id="spdySetting">
#if($spdyConfig.isSpdyAvailable)
spdy disabled
#end
spdy/2:<input type="checkBox" name="spdy2" id="spdy2"
#if($spdy2==true)
checked="checked"
#end
 />
spdy/3:<input type="checkBox" name="spdy3" id="spdy3"
#if($spdy3==true)
checked="checked"
#end
 /><br/>
spdyTimeout:<input type="text" name="spdyTimeout" id="spdyTimeout" value="${spdyTimeout}"/><br/>
spdyFrameLimit:<input type="text" name="spdyFrameLimit" id="spdyFrameLimit" value="${spdyFrameLimit}"/><br/>
<input type="button" value="設定" onclick="setSpdy();" /><br/>
</div>

<Hr/>
<H2 onclick="ph.jQuery('#fileCache').toggle();">+FileCache設定</H2>
<div class="settingItem" id="fileCache">
file cache:<input type="checkBox" name="isFileCache" id="isFileCache"
#if(${config.fileCache.useCache()})
checked="checked"
#end
 onclick='setFileCache();' /><br>
</div>

<Hr/>
<H2 onclick='showDebug();' title='open script debug tab'>script debug</H2>

