<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja" dir="ltr">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Pragma" content="no-cache"> 
<meta http-equiv="Cache-Control" content="no-cache"> 
<meta http-equiv="Expires" content="0"> 
<script type="text/javascript" src="/pub/js/ph-loader.js?ph=ph"></script>
<script  type="text/javascript"><!--

var bid=null;
var token=null;
function sendObjToParent(msg){
  var jsonText=ph.JSON.stringify(msg);
  parent.postMessage(jsonText,'*');
}
function onMessageFunc(event){
  var msg=ph.JSON.parse(event.data);
  if(ph.jQuery.isArray(msg)){
    for(var i=0;i<msg.length;i++){
      objFromParent(msg[i]);
    }
  }else{
    objFromParent(msg);
  }
  if(!timer){
    clearTimeout(timer);
    timer=null;
    xhrRequest();
  }
}

function objFromParent(msg){
  if(msg.type==='negotiate'){
    bid=msg.bid;
    token=msg.token;
    if(!msg.needRes){
      return;
    }
  }
  msgs.push(msg);
}

function xhrSuccess(text){
  errorCount=0;
  if(text){##受け取ったtextはそのままparentFrameに送信
    parent.postMessage(text,'*');
  }
  if(msgs.length===0){
    timer=setTimeout(xhrRequest,INTERVAL);
  }else{
    xhrRequest();
  }
}

function xhrError(jqXhr,status,errorThrown){
  if(jqXhr.status===403){
    sendObjToParent([{type:'close'}]);
    sendObjToParent({load:false});
    return;
  }
  errorCount++;
  timer=setTimeout(xhrRequest,INTERVAL);
}

function xhrRequest(){
  timer=null;
  if(errorCount>3){##errorが３回続いたらclose
    sendObjToParent({load:false});
    return;
  }
  if(bid===null){
    timer=setTimeout(xhrRequest,INTERVAL);
    return;
  }
  if(msgs.length===0||msgs[0].type!=='negotiate'){
    msgs.unshift({type:'negotiate',bid:bid,token:token,needRes:false});
  }
  var jsonText=ph.JSON.stringify(msgs);
##alert('xhrRequest:'+jsonText);
  msgs=[];
  ph.jQuery.ajax({
    type: 'POST',
    url: xhrUrl,
    contentType : 'application/json',
    processData: false,
    data: jsonText,
    success: xhrSuccess,
    error: xhrError
  });
}

function frameNameToUrl(frameName){
  if( frameName.lastIndexOf(XHR_FRAME_NAME_PREFIX,0)!=0 ){
    return null;
  }
  var url=frameName.substring(XHR_FRAME_NAME_PREFIX.length)+'/!xhrPolling';
  return url;
}

var XHR_FRAME_NAME_PREFIX='__pa_xhr_';
var INTERVAL=1000;
var timer=null;
var msgs=[];
var errorCount=0;
var xhrUrl;
ph.jQuery(function(){
  xhrUrl=frameNameToUrl(window.name);
  if(!xhrUrl){
    return;
  }
  //unload後queueされてmessageを送信,subscribeは行わないTODO
  ph.jQuery(window).unload(function(){
    xhrRequest(true);
  });
  if(window.addEventListener){
    window.addEventListener('message',onMessageFunc, false);
  }else if(window.attachEvent){
    window.attachEvent('onmessage',onMessageFunc);
  }
  sendObjToParent({load:true});//loadされた事を親frameに通知
  xhrRequest();
});
// --></script>
</head>
<body>
</body>
</html>
