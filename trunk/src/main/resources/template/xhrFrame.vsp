<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja" dir="ltr">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Pragma" content="no-cache"> 
<meta http-equiv="Cache-Control" content="no-cache"> 
<meta http-equiv="Expires" content="0"> 
<script type="text/javascript" src="/pub/js/ph-loader.js?ph=ph"></script>
<script  type="text/javascript"><!--

var subscribes={};
function sendObjToParent(msg){
  var jsonText=ph.JSON.stringify(msg);
  parent.postMessage(jsonText,'*');
}
function onMessageFunc(event){
  var msg=ph.JSON.parse(event.data);
  if(ph.jQuery.isArray(msg)){
    for(var i;i<msg.length;i++){
      objFromParent(msg[i]);
    }
  }else{
    objFromParent(msg);
  }
}

function objFromParent(msg){
  if(msg.type==='xhrUnsubscribe'){
    if(subscribes[msg.qname + '@'+msg.subId]){
      delete subscribes[msg.qname + '@'+msg.subId];
    }
  }else{
    if(msg.type==='subscribe'){
      subscribes[msg.qname + '@'+msg.subId]=msg;
    }
    msgs.push(msg);
  }
}

function xhrSuccess(text){
  errorCount=0;
  if(text){//受け取ったtextはそ・ままparentFrameに送信
    parent.postMessage(text,'*');
  }
  setTimeout(xhrRequest,INTERVAL);
}

function xhrError(){
  errorCount++;
  setTimeout(xhrRequest,INTERVAL);
}

function xhrRequest(isUnload){
  if(errorCount>3){//errorが３回続いたらclose
    sendObjToParent({load:false});
    return;
  }
  if(!isUnload){
//unsubscribeをsubscribeの後にする必要があるため、subscribeを先頭に足す
    for(var key in subscribes){
      msgs.unshift(subscribes[key]);
    }
  }
  if(msgs.length==0){
    setTimeout(xhrRequest,INTERVAL);
    return;//何もメッセージがなければsubscribeもない、送信の必要なし
  }
  var jsonText=ph.JSON.stringify(msgs);
//alert('xhrRequest:'+jsonText);
  msgs=[];
  ph.jQuery.ajax({
    type: 'POST',
    url: xhrUrl,
    contentType : 'application/json',
    processData: false,
    data: jsonText,
    success: xhrSuccess,
    error: xhrError
  });
}

function frameNameToUrl(frameName){
  if( frameName.lastIndexOf(XHR_FRAME_NAME_PREFIX,0)!=0 ){
    return null;
  }
  var url=frameName.substring(XHR_FRAME_NAME_PREFIX.length);
  return url;
}

var XHR_FRAME_NAME_PREFIX='__wsq_';
var INTERVAL=1000;
var msgs=[];
var errorCount=0;
var xhrUrl;
ph.jQuery(function(){
  xhrUrl=frameNameToUrl(window.name);
  if(!xhrUrl){
    return;
  }
  //unload後queueされてmessageを送信,subscribeは行わないTODO
  ph.jQuery(window).unload(function(){
    xhrRequest(true);
  });
  if(window.addEventListener){
    window.addEventListener('message',onMessageFunc, false);
  }else if(window.attachEvent){
    window.attachEvent('onmessage',onMessageFunc);
  }
  sendObjToParent({load:true});//loadされた事を親frameに通知
  xhrRequest();
});
// --></script>
</head>
<body>
</body>
</html>
